{{- /*
Generated from 'k8s-resources-windows-namespace' from https://raw.githubusercontent.com/prometheus-operator/kube-prometheus/main/manifests/grafana-dashboardDefinitions.yaml
Do not change in-place! In order to change this file first read following link:
https://github.com/open-viz/installer/tree/master/charts/kube-grafana-dashboards/hack
*/ -}}
{{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
{{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion)  }}
apiVersion: openviz.dev/v1alpha1
kind: GrafanaDashboard
metadata:
  name: {{ printf "%s-%s" (include "kube-grafana-dashboards.fullname" $) "k8s-resources-windows-namespace" | trunc 63 | trimSuffix "-" }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "kube-grafana-dashboards.labels" $ | nindent 4 }}
spec:
{{- if or $.Values.grafana.name $.Values.grafana.namespace }}
  grafanaRef:
  {{- with $.Values.grafana.name }}
    name: {{ . }}
  {{- end }}
  {{- with $.Values.grafana.namespace }}
    namespace: {{ . }}
  {{- end }}
{{- end }}
{{- with $.Values.dashboard.folderID }}
  folderID: {{ . }}
{{- end }}
  overwrite: {{ $.Values.dashboard.overwrite }}
  templatize:
    title: {{ $.Values.dashboard.templatize.title }}
    datasource: {{ $.Values.dashboard.templatize.datasource }}
  model:
    editable: false
    panels:
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          custom:
            fillOpacity: 10
            showPoints: never
            spanNulls: true
      gridPos:
        h: 7
        w: 24
        x: 0
        y: 0
      id: 1
      interval: 1m
      options:
        legend:
          asTable: true
          calcs:
          - lastNotNull
          displayMode: table
          placement: right
          showLegend: true
        tooltip:
          mode: single
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster="$cluster", namespace="$namespace"}) by (pod)
        legendFormat: __auto
      title: CPU Usage
      type: timeseries
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        overrides:
        - matcher:
            id: byRegexp
            options: /%/
          properties:
          - id: unit
            value: percentunit
        - matcher:
            id: byName
            options: Pod
          properties:
          - id: links
            value:
            - title: Drill down to pods
              url: /d/40597a704a610e936dc6ed374a7ce023/k8s-resources-windows-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}
      gridPos:
        h: 7
        w: 24
        x: 0
        y: 7
      id: 2
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster="$cluster", namespace="$namespace"}) by (pod)
        format: table
        instant: true
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(kube_pod_windows_container_resource_cpu_cores_request{cluster="$cluster", namespace="$namespace"}) by (pod)
        format: table
        instant: true
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster="$cluster", namespace="$namespace"}) by (pod) / sum(kube_pod_windows_container_resource_cpu_cores_request{cluster="$cluster", namespace="$namespace"}) by (pod)
        format: table
        instant: true
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(kube_pod_windows_container_resource_cpu_cores_limit{cluster="$cluster", namespace="$namespace"}) by (pod)
        format: table
        instant: true
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(namespace_pod_container:windows_container_cpu_usage_seconds_total:sum_rate{cluster="$cluster", namespace="$namespace"}) by (pod) / sum(kube_pod_windows_container_resource_cpu_cores_limit{cluster="$cluster", namespace="$namespace"}) by (pod)
        format: table
        instant: true
      title: CPU Quota
      transformations:
      - id: joinByField
        options:
          byField: pod
          mode: outer
      - id: organize
        options:
          excludeByName:
            Time: true
            Time 1: true
            Time 2: true
            Time 3: true
            Time 4: true
            Time 5: true
          indexByName:
            Time 1: 0
            Time 2: 1
            Time 3: 2
            Time 4: 3
            Time 5: 4
            'Value #A': 6
            'Value #B': 7
            'Value #C': 8
            'Value #D': 9
            'Value #E': 10
            pod: 5
          renameByName:
            'Value #A': CPU Usage
            'Value #B': CPU Requests
            'Value #C': CPU Requests %
            'Value #D': CPU Limits
            'Value #E': CPU Limits %
            pod: Pod
      type: table
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          custom:
            fillOpacity: 10
            showPoints: never
            spanNulls: true
          unit: decbytes
      gridPos:
        h: 7
        w: 24
        x: 0
        y: 14
      id: 3
      interval: 1m
      options:
        legend:
          asTable: true
          calcs:
          - lastNotNull
          displayMode: table
          placement: right
          showLegend: true
        tooltip:
          mode: single
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(windows_container_private_working_set_usage{cluster="$cluster", namespace="$namespace"}) by (pod)
        legendFormat: __auto
      title: Memory Usage (Private Working Set)
      type: timeseries
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          unit: bytes
        overrides:
        - matcher:
            id: byRegexp
            options: /%/
          properties:
          - id: unit
            value: percentunit
        - matcher:
            id: byName
            options: Pod
          properties:
          - id: links
            value:
            - title: Drill down to pods
              url: /d/40597a704a610e936dc6ed374a7ce023/k8s-resources-windows-pod?${datasource:queryparam}&var-cluster=$cluster&var-namespace=$namespace&var-pod=${__data.fields.Pod}
      gridPos:
        h: 7
        w: 24
        x: 0
        y: 21
      id: 4
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(windows_container_private_working_set_usage{cluster="$cluster", namespace="$namespace"}) by (pod)
        format: table
        instant: true
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(kube_pod_windows_container_resource_memory_request{cluster="$cluster", namespace="$namespace"}) by (pod)
        format: table
        instant: true
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(windows_container_private_working_set_usage{cluster="$cluster", namespace="$namespace"}) by (pod) / sum(kube_pod_windows_container_resource_memory_request{cluster="$cluster", namespace="$namespace"}) by (pod)
        format: table
        instant: true
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(kube_pod_windows_container_resource_memory_limit{cluster="$cluster", namespace="$namespace"}) by (pod)
        format: table
        instant: true
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: sum(windows_container_private_working_set_usage{cluster="$cluster", namespace="$namespace"}) by (pod) / sum(kube_pod_windows_container_resource_memory_limit{cluster="$cluster", namespace="$namespace"}) by (pod)
        format: table
        instant: true
      title: Memory Quota
      transformations:
      - id: joinByField
        options:
          byField: pod
          mode: outer
      - id: organize
        options:
          excludeByName:
            Time: true
            Time 1: true
            Time 2: true
            Time 3: true
            Time 4: true
            Time 5: true
          indexByName:
            Time 1: 0
            Time 2: 1
            Time 3: 2
            Time 4: 3
            Time 5: 4
            'Value #A': 6
            'Value #B': 7
            'Value #C': 8
            'Value #D': 9
            'Value #E': 10
            pod: 5
          renameByName:
            'Value #A': Memory Usage
            'Value #B': Memory Requests
            'Value #C': Memory Requests %
            'Value #D': Memory Limits
            'Value #E': Memory Limits %
            pod: Pod
      type: table
    refresh: 10s
    schemaVersion: 39
    tags:
    - kubernetes-mixin
    templating:
      list:
      - current:
          selected: true
          text: default
          value: default
        hide: 0
        label: Data source
        name: datasource
        query: prometheus
        regex: ''
        type: datasource
      - datasource:
          type: prometheus
          uid: ${datasource}
        hide: {{ if .Values.dashboard.multicluster.global.enabled }}0{{ else }}2{{ end }}
        label: cluster
        name: cluster
        query: label_values(up{job="kubernetes-windows-exporter"}, cluster)
        refresh: 2
        sort: 1
        type: query
      - datasource:
          type: prometheus
          uid: ${datasource}
        hide: 0
        label: namespace
        name: namespace
        query: label_values(windows_pod_container_available{cluster="$cluster"}, namespace)
        refresh: 2
        sort: 1
        type: query
    time:
      from: now-1h
      to: now
    timezone: '{{ .Values.grafana.defaultDashboardsTimezone }}'
    title: Kubernetes / Compute Resources / Namespace(Windows)
{{- end }}
