{{- /*
Generated from 'workload-total' from https://raw.githubusercontent.com/prometheus-operator/kube-prometheus/main/manifests/grafana-dashboardDefinitions.yaml
Do not change in-place! In order to change this file first read following link:
https://github.com/open-viz/installer/tree/master/charts/kube-grafana-dashboards/hack
*/ -}}
{{- $kubeTargetVersion := default .Capabilities.KubeVersion.GitVersion .Values.kubeTargetVersionOverride }}
{{- if and (semverCompare ">=1.14.0-0" $kubeTargetVersion) (semverCompare "<9.9.9-9" $kubeTargetVersion)  }}
apiVersion: openviz.dev/v1alpha1
kind: GrafanaDashboard
metadata:
  name: {{ printf "%s-%s" (include "kube-grafana-dashboards.fullname" $) "workload-total" | trunc 63 | trimSuffix "-" }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "kube-grafana-dashboards.labels" $ | nindent 4 }}
spec:
{{- if or $.Values.grafana.name $.Values.grafana.namespace }}
  grafanaRef:
  {{- with $.Values.grafana.name }}
    name: {{ . }}
  {{- end }}
  {{- with $.Values.grafana.namespace }}
    namespace: {{ . }}
  {{- end }}
{{- end }}
{{- with $.Values.dashboard.folderID }}
  folderID: {{ . }}
{{- end }}
  overwrite: {{ $.Values.dashboard.overwrite }}
  templatize:
    title: {{ $.Values.dashboard.templatize.title }}
    datasource: {{ $.Values.dashboard.templatize.datasource }}
  model:
    editable: false
    links:
    - asDropdown: true
      includeVars: true
      keepTime: true
      tags:
      - kubernetes-mixin
      targetBlank: false
      title: Kubernetes
      type: dashboards
    panels:
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          color:
            fixedColor: green
            mode: fixed
          unit: Bps
      gridPos:
        h: 9
        w: 12
        x: 0
        y: 0
      id: 1
      interval: 1m
      options:
        displayMode: basic
        showUnfilled: false
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: 'sort_desc(sum(rate(container_network_receive_bytes_total{job="kubelet", metrics_path="/metrics/cadvisor", cluster="$cluster",namespace=~"$namespace"}[$__rate_interval])

          * on (namespace,pod)

          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",namespace=~"$namespace", workload=~"$workload", workload_type=~"$type"}) by (pod))

          '
        legendFormat: __auto
      title: Current Rate of Bytes Received
      type: bargauge
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          color:
            fixedColor: green
            mode: fixed
          unit: Bps
      gridPos:
        h: 9
        w: 12
        x: 12
        y: 0
      id: 2
      interval: 1m
      options:
        displayMode: basic
        showUnfilled: false
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: 'sort_desc(sum(rate(container_network_transmit_bytes_total{job="kubelet", metrics_path="/metrics/cadvisor", cluster="$cluster",namespace=~"$namespace"}[$__rate_interval])

          * on (namespace,pod)

          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",namespace=~"$namespace", workload=~"$workload", workload_type=~"$type"}) by (pod))

          '
        legendFormat: __auto
      title: Current Rate of Bytes Transmitted
      type: bargauge
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          color:
            fixedColor: green
            mode: fixed
          unit: Bps
      gridPos:
        h: 9
        w: 12
        x: 0
        y: 9
      id: 3
      interval: 1m
      options:
        displayMode: basic
        showUnfilled: false
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: 'sort_desc(avg(rate(container_network_receive_bytes_total{job="kubelet", metrics_path="/metrics/cadvisor", cluster="$cluster",namespace=~"$namespace"}[$__rate_interval])

          * on (namespace,pod)

          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",namespace=~"$namespace", workload=~"$workload", workload_type=~"$type"}) by (pod))

          '
        legendFormat: __auto
      title: Average Rate of Bytes Received
      type: bargauge
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          color:
            fixedColor: green
            mode: fixed
          unit: Bps
      gridPos:
        h: 9
        w: 12
        x: 12
        y: 9
      id: 4
      interval: 1m
      options:
        displayMode: basic
        showUnfilled: false
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: 'sort_desc(avg(rate(container_network_transmit_bytes_total{job="kubelet", metrics_path="/metrics/cadvisor", cluster="$cluster",namespace=~"$namespace"}[$__rate_interval])

          * on (namespace,pod)

          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",namespace=~"$namespace", workload=~"$workload", workload_type=~"$type"}) by (pod))

          '
        legendFormat: __auto
      title: Average Rate of Bytes Transmitted
      type: bargauge
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          custom:
            fillOpacity: 10
            showPoints: never
            spanNulls: true
          unit: binBps
      gridPos:
        h: 9
        w: 12
        x: 0
        y: 18
      id: 5
      interval: 1m
      options:
        legend:
          asTable: true
          calcs:
          - lastNotNull
          displayMode: table
          placement: right
          showLegend: true
        tooltip:
          mode: single
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: 'sort_desc(sum(rate(container_network_receive_bytes_total{job="kubelet", metrics_path="/metrics/cadvisor", cluster="$cluster",namespace=~"$namespace"}[$__rate_interval])

          * on (namespace,pod)

          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",namespace=~"$namespace", workload=~"$workload", workload_type=~"$type"}) by (pod))

          '
        legendFormat: __auto
      title: Receive Bandwidth
      type: timeseries
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          custom:
            fillOpacity: 10
            showPoints: never
            spanNulls: true
          unit: binBps
      gridPos:
        h: 9
        w: 12
        x: 12
        y: 18
      id: 6
      interval: 1m
      options:
        legend:
          asTable: true
          calcs:
          - lastNotNull
          displayMode: table
          placement: right
          showLegend: true
        tooltip:
          mode: single
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: 'sort_desc(sum(rate(container_network_transmit_bytes_total{job="kubelet", metrics_path="/metrics/cadvisor", cluster="$cluster",namespace=~"$namespace"}[$__rate_interval])

          * on (namespace,pod)

          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",namespace=~"$namespace", workload=~"$workload", workload_type=~"$type"}) by (pod))

          '
        legendFormat: __auto
      title: Transmit Bandwidth
      type: timeseries
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          custom:
            fillOpacity: 10
            showPoints: never
            spanNulls: true
          unit: pps
      gridPos:
        h: 9
        w: 12
        x: 0
        y: 27
      id: 7
      interval: 1m
      options:
        legend:
          asTable: true
          calcs:
          - lastNotNull
          displayMode: table
          placement: right
          showLegend: true
        tooltip:
          mode: single
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: 'sort_desc(sum(rate(container_network_receive_packets_total{job="kubelet", metrics_path="/metrics/cadvisor", cluster="$cluster",namespace=~"$namespace"}[$__rate_interval])

          * on (namespace,pod)

          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",namespace=~"$namespace", workload=~"$workload", workload_type=~"$type"}) by (pod))

          '
        legendFormat: __auto
      title: Rate of Received Packets
      type: timeseries
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          custom:
            fillOpacity: 10
            showPoints: never
            spanNulls: true
          unit: pps
      gridPos:
        h: 9
        w: 12
        x: 12
        y: 27
      id: 8
      interval: 1m
      options:
        legend:
          asTable: true
          calcs:
          - lastNotNull
          displayMode: table
          placement: right
          showLegend: true
        tooltip:
          mode: single
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: 'sort_desc(sum(rate(container_network_transmit_packets_total{job="kubelet", metrics_path="/metrics/cadvisor", cluster="$cluster",namespace=~"$namespace"}[$__rate_interval])

          * on (namespace,pod)

          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",namespace=~"$namespace", workload=~"$workload", workload_type=~"$type"}) by (pod))

          '
        legendFormat: __auto
      title: Rate of Transmitted Packets
      type: timeseries
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          custom:
            fillOpacity: 10
            showPoints: never
            spanNulls: true
          unit: pps
      gridPos:
        h: 9
        w: 12
        x: 0
        y: 36
      id: 9
      interval: 1m
      options:
        legend:
          asTable: true
          calcs:
          - lastNotNull
          displayMode: table
          placement: right
          showLegend: true
        tooltip:
          mode: single
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: 'sort_desc(sum(rate(container_network_receive_packets_dropped_total{job="kubelet", metrics_path="/metrics/cadvisor", cluster="$cluster",namespace=~"$namespace"}[$__rate_interval])

          * on (namespace,pod)

          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",namespace=~"$namespace", workload=~"$workload", workload_type=~"$type"}) by (pod))

          '
        legendFormat: __auto
      title: Rate of Received Packets Dropped
      type: timeseries
    - datasource:
        type: datasource
        uid: -- Mixed --
      fieldConfig:
        defaults:
          custom:
            fillOpacity: 10
            showPoints: never
            spanNulls: true
          unit: pps
      gridPos:
        h: 9
        w: 12
        x: 12
        y: 36
      id: 10
      interval: 1m
      options:
        legend:
          asTable: true
          calcs:
          - lastNotNull
          displayMode: table
          placement: right
          showLegend: true
        tooltip:
          mode: single
      pluginVersion: v11.4.0
      targets:
      - datasource:
          type: prometheus
          uid: ${datasource}
        expr: 'sort_desc(sum(rate(container_network_transmit_packets_dropped_total{job="kubelet", metrics_path="/metrics/cadvisor", cluster="$cluster",namespace=~"$namespace"}[$__rate_interval])

          * on (namespace,pod)

          group_left(workload,workload_type) namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster",namespace=~"$namespace", workload=~"$workload", workload_type=~"$type"}) by (pod))

          '
        legendFormat: __auto
      title: Rate of Transmitted Packets Dropped
      type: timeseries
    refresh: 10s
    schemaVersion: 39
    tags:
    - kubernetes-mixin
    templating:
      list:
      - current:
          selected: true
          text: default
          value: default
        hide: 0
        label: Data source
        name: datasource
        query: prometheus
        regex: ''
        type: datasource
      - datasource:
          type: prometheus
          uid: ${datasource}
        hide: {{ if .Values.dashboard.multicluster.global.enabled }}0{{ else }}2{{ end }}
        label: cluster
        name: cluster
        query: label_values(kube_pod_info{job="kube-state-metrics"}, cluster)
        refresh: 2
        sort: 1
        type: query
      - allValue: .+
        current:
          selected: false
          text: kube-system
          value: kube-system
        datasource:
          type: prometheus
          uid: ${datasource}
        hide: 0
        includeAll: true
        label: namespace
        name: namespace
        query: label_values(container_network_receive_packets_total{cluster="$cluster"}, namespace)
        refresh: 2
        sort: 1
        type: query
      - datasource:
          type: prometheus
          uid: ${datasource}
        hide: 0
        label: workload
        name: workload
        query: label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload=~".+"}, workload)
        refresh: 2
        sort: 1
        type: query
      - allValue: .+
        datasource:
          type: prometheus
          uid: ${datasource}
        hide: 0
        includeAll: true
        label: workload_type
        name: type
        query: label_values(namespace_workload_pod:kube_pod_owner:relabel{cluster="$cluster", namespace=~"$namespace", workload=~"$workload"}, workload_type)
        refresh: 2
        sort: 1
        type: query
    time:
      from: now-1h
      to: now
    timezone: '{{ .Values.grafana.defaultDashboardsTimezone }}'
    title: Kubernetes / Networking / Workload
{{- end }}
