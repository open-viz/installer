apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: backends.trickstercache.org
spec:
  group: trickstercache.org
  names:
    kind: Backend
    listKind: BackendList
    plural: backends
    singular: backend
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Backend is the Schema for the backends API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackendSpec defines the desired state of Backend
            properties:
              alb:
                description: ALBOptions holds the options for ALBs
                properties:
                  fgr_status_codes:
                    description: FGRStatusCodes provides an explicit list of status
                      codes considered "good" when using the First Good Response (fgr)
                      methodology. By default, any code < 400 is good.
                    items:
                      type: integer
                    type: array
                  healthy_floor:
                    description: 'HealthyFloor is the minimum health check status
                      value to be considered Available in the pool -1 : all pool members
                      are Available regardless of health check status 0 (default)
                      : pool members with status of unknown (0) or healthy (1) are
                      Available 1 : only pool members with status of healthy (1) are
                      Available unknown means the first hc hasn''t returned yet, or
                      (more likely) HealthCheck Interval on target backend is not
                      set'
                    type: integer
                  mechanism:
                    description: MechanismName indicates the name of the load balancing
                      mechanism
                    type: string
                  output_format:
                    description: OutputFormat accompanies the tsmerge Mechanism to
                      indicate the provider output format options include any valid
                      time seres backend like prometheus, influxdb or clickhouse
                    type: string
                  pool:
                    description: Pool provides the list of backend names to be used
                      by the load balancer
                    items:
                      type: string
                    type: array
                required:
                - fgr_status_codes
                type: object
              backfill_tolerance_ms:
                description: BackfillToleranceMS prevents values with timestamps newer
                  than the provided number of milliseconds from being cached. this
                  allows propagation of upstream backfill operations that modify recently-cached
                  data
                format: int64
                type: integer
              backfill_tolerance_points:
                description: BackfillTolerancePoints is similar to the MS version,
                  except that it's final value is dependent on the query step value
                  to determine the relative duration of backfill tolerance per-query
                  When both are set, the higher of the two values is used
                type: integer
              cache_key_prefix:
                description: CacheKeyPrefix defines the cache key prefix the backend
                  will use when writing objects to the cache
                type: string
              cache_name:
                description: CacheName provides the name of the configured cache where
                  the backend client will store it's cache data
                type: string
              compressible_types:
                description: CompressibleTypeList specifies the HTTP Object Content
                  Types that will be compressed internally when stored in the Trickster
                  cache or served to clients with a compatible 'Accept-Encoding' header
                items:
                  type: string
                type: array
              dearticulate_upstream_ranges:
                description: "DearticulateUpstreamRanges, when true, indicates that
                  when Trickster requests multiple ranges from the backend, that they
                  be requested as individual upstream requests instead of a single
                  request that expects a multipart response\t// this optimizes Trickster
                  to request as few bytes as possible when fronting backends that
                  only support single range requests"
                type: boolean
              fast_forward_disable:
                description: FastForwardDisable indicates whether the FastForward
                  feature should be disabled for this backend
                type: boolean
              fastforward_ttl_ms:
                description: TimeseriesTTLMS specifies the cache TTL of fast forward
                  data
                type: integer
              forwarded_headers:
                description: ForwardedHeaders indicates the class of 'Forwarded' header
                  to attach to upstream requests
                type: string
              healthcheck:
                description: HealthCheck is the health check options reference for
                  this backend
                properties:
                  body:
                    description: Body provides a body to apply when making an upstream
                      health check request
                    type: string
                  expected_body:
                    description: ExpectedBody is the body expected in the response
                      to be considered Healthy status
                    type: string
                  expected_codes:
                    description: Target Probe Response Options ExpectedCodes is the
                      list of Status Codes that positively indicate a Healthy status
                    items:
                      type: integer
                    type: array
                  expected_headers:
                    additionalProperties:
                      type: string
                    description: ExpectedHeaders is a list of Headers (name and value)
                      expected in the response in order to be considered Healthy status
                    type: object
                  failure_threshold:
                    description: FailureThreshold indicates the number of consecutive
                      failed probes required to mark an available target as unavailable
                    type: integer
                  headers:
                    additionalProperties:
                      type: string
                    description: Headers provides the HTTP Headers to apply when making
                      an upstream health check
                    type: object
                  host:
                    description: Host is the Host name header to use when making an
                      upstream health check
                    type: string
                  interval_ms:
                    description: IntervalMS defines the interval in milliseconds at
                      which the target will be probed
                    type: integer
                  path:
                    description: Path provides the URL path for the upstream health
                      check
                    type: string
                  query:
                    description: Query provides the HTTP query parameters to use when
                      making an upstream health check
                    type: string
                  recovery_threshold:
                    description: RecoveryThreshold indicates the number of consecutive
                      successful probes required to mark an unavailable target as
                      available
                    type: integer
                  scheme:
                    description: Scheme is the scheme to use when making an upstream
                      health check (http or https)
                    type: string
                  timeout_ms:
                    description: TimeoutMS is the amount of time a health check probe
                      should wait for a response before timing out
                    type: integer
                  verb:
                    description: Target Outbound Request Options Verb provides the
                      HTTP verb to use when making an upstream health check
                    type: string
                type: object
              hosts:
                description: "HTTP and Proxy Configurations \n Hosts identifies the
                  frontend hostnames this backend should handle (virtual hosting)"
                items:
                  type: string
                type: array
              is_default:
                description: IsDefault indicates if this is the d.Default backend
                  for any request not matching a configured route
                type: boolean
              keep_alive_timeout_ms:
                description: KeepAliveTimeoutMS defines how long an open keep-alive
                  HTTP connection remains idle before closing
                format: int64
                type: integer
              latency_max_ms:
                description: LatencyMax is the maximum amount of simulated latency
                  to apply to each incoming request
                type: integer
              latency_min_ms:
                description: "Simulated Latency When LatencyMinMS > 0 and LatencyMaxMS
                  < LatencyMinMS (e.g., 0), then LatencyMinMS of latency are applied
                  to the request. When LatencyMaxMS > LatencyMinMS, then a random
                  amount of latency between the two values will be applied to the
                  request \n LatencyMin is the minimum amount of simulated latency
                  to apply to each incoming request"
                type: integer
              max_idle_conns:
                description: MaxIdleConns defines maximum number of open keep-alive
                  connections to maintain
                type: integer
              max_object_size_bytes:
                description: MaxObjectSizeBytes specifies the max objectsize to be
                  accepted for any given cache object
                type: integer
              max_ttl_ms:
                description: MaxTTLMS specifies the maximum allowed TTL for any cache
                  object
                type: integer
              multipart_ranges_disabled:
                description: MultipartRangesDisabled, when true, indicates that if
                  a downstream client requests multiple ranges in a single request,
                  Trickster will instead request and return a 200 OK with the full
                  object body
                type: boolean
              negative_cache_name:
                description: NegativeCacheName provides the name of the Negative Cache
                  Config to be used by this Backend
                type: string
              origin_url:
                description: OriginURL provides the base upstream URL for all proxied
                  requests to this Backend. it can be as simple as http://example.com
                  or as complex as https://example.com:8443/path/prefix
                type: string
              path_routing_disabled:
                description: PathRoutingDisabled, when true, will bypass /backendName/path
                  route registrations
                type: boolean
              paths:
                additionalProperties:
                  description: Options defines a URL Path that is associated with
                    an HTTP Handler
                  properties:
                    cache_key_form_fields:
                      description: CacheKeyFormFields provides the list of http request
                        body fields to be included in the hash for each request's
                        cache key
                      items:
                        type: string
                      type: array
                    cache_key_headers:
                      description: CacheKeyHeaders provides the list of http request
                        headers to be included in the hash for each request's cache
                        key
                      items:
                        type: string
                      type: array
                    cache_key_params:
                      description: CacheKeyParams provides the list of http request
                        query parameters to be included in the hash for each request's
                        cache key
                      items:
                        type: string
                      type: array
                    collapsed_forwarding:
                      description: CollapsedForwardingName indicates 'basic' or 'progressive'
                        Collapsed Forwarding to be used by this path.
                      type: string
                    handler:
                      description: HandlerName provides the name of the HTTP handler
                        to use
                      type: string
                    match_type:
                      description: MatchTypeName indicates the type of path match
                        the router will apply to the path ('exact' or 'prefix')
                      type: string
                    methods:
                      description: Methods provides the list of permitted HTTP request
                        methods for this Path
                      items:
                        type: string
                      type: array
                    no_metrics:
                      description: NoMetrics, when set to true, disables metrics decoration
                        for the path
                      type: boolean
                    path:
                      description: Path indicates the HTTP Request's URL PATH to which
                        this configuration applies
                      type: string
                    req_rewriter_name:
                      description: ReqRewriterName is the name of a configured Rewriter
                        that will modify the request prior to processing by the backend
                        client
                      type: string
                    request_headers:
                      additionalProperties:
                        type: string
                      description: RequestHeaders is a map of headers that will be
                        added to requests to the upstream Origin for this path
                      type: object
                    request_params:
                      additionalProperties:
                        type: string
                      description: RequestParams is a map of headers that will be
                        added to requests to the upstream Origin for this path
                      type: object
                    response_body:
                      description: ResponseBody sets a custom response body to be
                        sent to the donstream client for this path.
                      type: string
                    response_code:
                      description: ResponseCode sets a custom response code to be
                        sent to downstream clients for this path.
                      type: integer
                    response_headers:
                      additionalProperties:
                        type: string
                      description: ResponseHeaders is a map of http headers that will
                        be added to responses to the downstream client
                      type: object
                  required:
                  - no_metrics
                  type: object
                description: PathList is a list of Path Options that control the behavior
                  of the given paths when requested
                type: object
              prometheus:
                description: Prometheus holds options specific to prometheus backends
                properties:
                  instant_round_ms:
                    type: integer
                  labels:
                    additionalProperties:
                      type: string
                    type: object
                type: object
              provider:
                description: Provider describes the type of backend (e.g., 'prometheus')
                type: string
              req_rewriter_name:
                description: ReqRewriterName is the name of a configured Rewriter
                  that will modify the request prior to processing by the backend
                  client
                type: string
              require_tls:
                description: RequireTLS, when true, indicates this Backend Config's
                  paths must only be registered with the TLS Router
                type: boolean
              revalidation_factor:
                description: RevalidationFactor specifies how many times to multiply
                  the object freshness lifetime by to calculate an absolute cache
                  TTL
                type: number
              rule_name:
                description: RuleName provides the name of the rule config to be used
                  by this backend. This is only effective if the Backend provider
                  is 'rule'
                type: string
              secret:
                description: secret information about the secret data to project
                properties:
                  items:
                    description: items if unspecified, each key-value pair in the
                      Data field of the referenced Secret will be projected into the
                      volume as a file whose name is the key and content is the value.
                      If specified, the listed keys will be projected into the specified
                      paths, and unlisted keys will not be present. If a key is specified
                      which is not present in the Secret, the volume setup will error
                      unless it is marked optional. Paths must be relative and may
                      not contain the '..' path or start with '..'.
                    items:
                      description: Maps a string key to a path within a volume.
                      properties:
                        key:
                          description: key is the key to project.
                          type: string
                        mode:
                          description: 'mode is Optional: mode bits used to set permissions
                            on this file. Must be an octal value between 0000 and
                            0777 or a decimal value between 0 and 511. YAML accepts
                            both octal and decimal values, JSON requires decimal values
                            for mode bits. If not specified, the volume defaultMode
                            will be used. This might be in conflict with other options
                            that affect the file mode, like fsGroup, and the result
                            can be other mode bits set.'
                          format: int32
                          type: integer
                        path:
                          description: path is the relative path of the file to map
                            the key to. May not be an absolute path. May not contain
                            the path element '..'. May not start with the string '..'.
                          type: string
                      required:
                      - key
                      - path
                      type: object
                    type: array
                  name:
                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      TODO: Add other useful fields. apiVersion, kind, uid?'
                    type: string
                  optional:
                    description: optional field specify whether the Secret or its
                      key must be defined
                    type: boolean
                type: object
                x-kubernetes-map-type: atomic
              shard_max_size_ms:
                description: MaxShardSizeMS defines the max size of a timeseries request
                  in milliseconds, before sharding into multiple requests of this
                  denomination and reconsitituting the results. If MaxShardSizePoints
                  and MaxShardSizeMS are both > 0, the configuration is invalid
                type: integer
              shard_max_size_points:
                description: MaxShardSizePoints defines the maximum size of a timeseries
                  request in unique timestamps, before sharding into multiple requests
                  of this denomination and reconsitituting the results. If MaxShardSizePoints
                  and MaxShardSizeMS are both > 0, the configuration is invalid
                type: integer
              shard_step_ms:
                description: ShardStepMS defines the epoch-aligned cadence to use
                  when creating shards. When set to 0, shards are not aligned to the
                  epoch at a specific step. MaxShardSizeMS must be perfectly divisible
                  by ShardStepMS when both are > 0, or the configuration is invalid
                type: integer
              timeout_ms:
                description: TimeoutMS defines how long the HTTP request will wait
                  for a response before timing out
                format: int64
                type: integer
              timeseries_eviction_method:
                description: TimeseriesEvictionMethodName specifies which methodology
                  ("oldest", "lru") is used to identify timeseries to evict from a
                  full cache object
                type: string
              timeseries_retention_factor:
                description: Object Proxy Cache and Delta Proxy Cache Configurations
                  TimeseriesRetentionFactor limits the maximum the number of chronological
                  timestamps worth of data to store in cache for each query
                type: integer
              timeseries_ttl_ms:
                description: TimeseriesTTLMS specifies the cache TTL of timeseries
                  objects
                type: integer
              tls:
                description: TLS is the TLS Configuration for the Frontend and Backend
                properties:
                  certificate_authority_paths:
                    description: CertificateAuthorities provides a list of custom
                      Certificate Authorities for the upstream origin which are considered
                      in addition to any system CA's by the Trickster HTTPS Client
                    items:
                      type: string
                    type: array
                  client_cert_path:
                    description: ClientCertPath provides the path to the Client Certificate
                      when using Mutual Authorization
                    type: string
                  client_key_path:
                    description: ClientKeyPath provides the path to the Client Key
                      when using Mutual Authorization
                    type: string
                  full_chain_cert_path:
                    description: FullChainCertPath specifies the path of the file
                      containing the concatenated server certification and the intermediate
                      certification for the tls endpoint
                    type: string
                  insecure_skip_verify:
                    description: InsecureSkipVerify indicates that the HTTPS Client
                      in Trickster should bypass hostname verification for the origin's
                      certificate when proxying requests
                    type: boolean
                  private_key_path:
                    description: PrivateKeyPath specifies the path of the private
                      key file for the tls endpoint
                    type: string
                type: object
              tracing_name:
                description: TracingConfigName provides the name of the Tracing Config
                  to be used by this Backend
                type: string
            type: object
          status:
            description: BackendStatus defines the observed state of Backend
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
