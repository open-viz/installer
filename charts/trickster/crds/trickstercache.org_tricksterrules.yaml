apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: tricksterrules.trickstercache.org
spec:
  group: trickstercache.org
  names:
    kind: TricksterRule
    listKind: TricksterRuleList
    plural: tricksterrules
    singular: tricksterrule
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TricksterRule is the Schema for the tricksterrules API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: TricksterRuleSpec defines the desired state of TricksterRule
            properties:
              cases:
                additionalProperties:
                  description: CaseOptions defines the options for a given evaluation
                    case
                  properties:
                    matches:
                      description: Matches indicates the values matching the rule
                        execution's output that apply to this case
                      items:
                        type: string
                      type: array
                    next_route:
                      description: NextRoute is the name of the next BackendOptions
                        destination for the request in this case
                      type: string
                    redirect_url:
                      description: RedirectURL provides a URL to redirect the request
                        in this case, rather than handing off to the NextRoute
                      type: string
                    req_rewriter_name:
                      description: ReqRewriterName is the name of a configured Rewriter
                        that will modify the request in this case prior to handing
                        off to the NextRoute
                      type: string
                  type: object
                description: RuleCaseOptions is the map of cases to apply to evaluate
                  against this rule
                type: object
              egress_req_rewriter_name:
                description: EgressReqRewriterName is the name of a configured Rewriter
                  that will modify the request once all other rule actions have occurred,
                  prior to the request being passed to the next route
                type: string
              ingress_req_rewriter_name:
                description: IngressReqRewriterName is the name of a configured Rewriter
                  that will modify the request prior to the rule taking any other
                  action
                type: string
              input_delimiter:
                description: InputDelimiter is optional, defaulting to " ", and indicates
                  the delimiter for separating the Input into parts. This value has
                  no effect unless InputIndex >= 0
                type: string
              input_encoding:
                description: 'InputEncoding is optional, defaulting to '''', and defines
                  any special encoding format on the input. Supported Options are:
                  ''base64'''
                type: string
              input_index:
                description: InputIndex is optional, defaulting to -1 (no parts /
                  use full string), and indicates which part of the Input contains
                  the specific value to which this rule applies. InputIndex is zero-based.
                type: integer
              input_key:
                description: InputKey is optional and provides extra information for
                  locating the data source when the InputSource is header or param,
                  the input key must be the target header or param name
                type: string
              input_source:
                description: 'Input source specifies the data source used when executing
                  the rule. Possible options: Source           Example Source Used
                  url              https://example.com:8480/path1/path2?param1=value
                  url_no_params    https://example.com:8480/path1/path2 scheme           https
                  host             example.com:8480 hostname         example.com port             8480
                  (80 and 443 are auto-set based on scheme when no port is provided)
                  path             /path1/path2 params           ?param1=value param            [must
                  be used with InputKey as described below] header           [must
                  be used with InputKey as described below]'
                type: string
              input_type:
                description: 'InputType is optional, defaulting to string, and indicates
                  the type of input: string, num (treated internally as float64),
                  or bool'
                type: string
              max_rule_executions:
                description: MaxRuleExecutions limits the maximum number of per-Request
                  rule-based hops so as to avoid execution loops.
                type: integer
              next_route:
                description: NextRoute indicates the name of the next BackendOptions
                  destination for the request when none of the cases are met following
                  the execution of the rule
                type: string
              nomatch_req_rewriter_name:
                description: NoMatchReqRewriterName is the name of a configured Rewriter
                  that will modify the request once all other rule actions have occurred,
                  and only if the Request did not match any defined case, prior to
                  the request being passed to the next route
                type: string
              operation:
                description: 'Operation specifies what action to take on the input,
                  whose result is used to determine if any case is matched. Possible
                  options are as follows. string:   eq, contains, suffix, prefix,
                  md5, sha1, base64, modulo num:      eq, gt, lt, ge, le, bt (inclusive),
                  modulo bool:     eq any boolean operation (everything but md5, sha1,
                  base64, modulo) can be prefixed with !'
                type: string
              operation_arg:
                description: OperationArg is optional and provides extra information
                  used when performing the configured Operation, such as the demonimator
                  when the operation is modulus
                type: string
              redirect_url:
                description: RedirectURL provides a URL to redirect the request in
                  the default case, rather than handing off to the NextRoute
                type: string
            type: object
          status:
            description: TricksterRuleStatus defines the observed state of TricksterRule
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
